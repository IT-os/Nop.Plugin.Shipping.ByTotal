@model Nop.Plugin.Shipping.ByTotal.Models.ConfigurationModel
@using Nop.Core
@using Nop.Plugin.Shipping.ByTotal.Models
@using Nop.Web.Framework.Models.DataTables
@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@inject Nop.Services.Stores.IStoreService storeService
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext

@{
    Layout = "_ConfigurePlugin";
}

<div class="content-header clearfix">
    <div class="pull-right">
        <a asp-controller="Shipping" asp-action="Methods" class="btn bg-blue">
            <i class="fa fa-truck"></i>
            @T("Admin.Configuration.Shipping.Methods.Manage")
        </a>
        <a asp-controller="Shipping" asp-action="Restrictions" class="btn bg-blue">
            <i class="fa fa-globe"></i>
            @T("Admin.Configuration.Shipping.Restrictions")
        </a>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "shipping-bytotal-grid",
            UrlRead = new DataUrl("RatesList", "ShippingByTotal", null),
            UrlDelete = new DataUrl("RateDelete", "ShippingByTotal", null),
            Length = Model.PageSize,
            LengthMenu = Model.AvailablePageSizes,

            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(ShippingByTotalModel.StoreName))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.Store").Text,
                    Width = "200",
                    Visible = Model.AvailableStores.Count > 1
                },
                new ColumnProperty(nameof(ShippingByTotalModel.WarehouseName))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.Warehouse").Text,
                    Width = "200",
                },
                new ColumnProperty(nameof(ShippingByTotalModel.CountryName))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.Country").Text,
                    Width = "200"
                },
                new ColumnProperty(nameof(ShippingByTotalModel.StateProvinceName))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.StateProvince").Text,
                    Width = "200"
                },
                new ColumnProperty(nameof(ShippingByTotalModel.ZipPostalCode))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.ZipPostalCode").Text,
                    Width = "100"
                },
                new ColumnProperty(nameof(ShippingByTotalModel.DisplayOrder))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.DisplayOrder").Text,
                    Width = "100",
                    ClassName =  NopColumnClassDefaults.CenterAll
                },
                new ColumnProperty(nameof(ShippingByTotalModel.ShippingMethodName))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.ShippingMethod").Text,
                    Width = "200"
                },
                new ColumnProperty(nameof(ShippingByTotalModel.From))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.From").Text,
                    Width = "100",
                    Render = new RenderCustom("renderAmount")
                },
                new ColumnProperty(nameof(ShippingByTotalModel.To))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.To").Text,
                    Width = "100",
                    Render = new RenderCustom("renderAmount")
                },
                new ColumnProperty(nameof(ShippingByTotalModel.UsePercentage))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.UsePercentage").Text,
                    Width = "100",
                    ClassName =  NopColumnClassDefaults.CenterAll,
                    Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(ShippingByTotalModel.ShippingChargePercentage))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.ShippingChargePercentage").Text,
                    Width = "100",
                    Render = new RenderCustom("renderPercentage")
                },
                new ColumnProperty(nameof(ShippingByTotalModel.ShippingChargeAmount))
                {
                    Title = T("Plugins.Shipping.ByTotal.Fields.ShippingChargeAmount").Text,
                    Width = "100",
                    Render = new RenderCustom("renderAmount")
                },
                new ColumnProperty(nameof(ShippingByTotalModel.Id))
                {
                    Title = T("Admin.Common.Edit").Text,
                    ClassName = NopColumnClassDefaults.Button,
                    Width = "100",
                    Render = new RenderCustom("renderColumnEdit")
                },
                new ColumnProperty(nameof(ShippingByTotalModel.Id))
                {
                    Title = T("Admin.Common.Delete").Text,
                    ClassName = NopColumnClassDefaults.Button,
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                    Width = "100"
                }
            }
        })
    </div>

    <div class="panel-footer">
        <button type="submit" id="btnAddRecord" class="btn btn-primary">
            @T("Plugins.Shipping.ByTotal.AddRecord")
        </button>
    </div>
</div>

<div class="panel panel-default" id="addeditpanel" style="display:none;">
    <div class="panel-body">
        <p id="addedittitle" style="font-weight:700"></p>

        <form asp-controller="ShippingByTotal" asp-action="Configure" method="post" id="shipping-bytotal-form">

            <input type="hidden" id="Id" value="0" />

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="StoreId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="StoreId" asp-items="Model.AvailableStores" />
                    <span asp-validation-for="StoreId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="WarehouseId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="WarehouseId" asp-items="Model.AvailableWarehouses" />
                    <span asp-validation-for="WarehouseId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="CountryId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="CountryId" asp-items="Model.AvailableCountries" />
                    <span asp-validation-for="CountryId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="StateProvinceId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="StateProvinceId" asp-items="Model.AvailableStates" />
                    <span asp-validation-for="StateProvinceId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="ZipPostalCode" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="ZipPostalCode" />
                    <span asp-validation-for="ZipPostalCode"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="DisplayOrder" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="DisplayOrder" />
                    <span asp-validation-for="DisplayOrder"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="ShippingMethodId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="ShippingMethodId" asp-items="Model.AvailableShippingMethods" />
                    <span asp-validation-for="ShippingMethodId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="From" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="From" asp-postfix="@Model.PrimaryStoreCurrencyCode" />
                    <span asp-validation-for="From"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="To" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="To" asp-postfix="@Model.PrimaryStoreCurrencyCode" />
                    <span asp-validation-for="To"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="UsePercentage" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="UsePercentage" />
                    <span asp-validation-for="UsePercentage"></span>
                </div>
            </div>

            <div class="form-group" id="pnlAddShippingChargePercentage">
                <div class="col-md-3">
                    <nop-label asp-for="ShippingChargePercentage" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="ShippingChargePercentage" />
                    <span asp-validation-for="ShippingChargePercentage"></span>
                </div>
            </div>

            <div class="form-group" id="pnlAddShippingChargeAmount">
                <div class="col-md-3">
                    <nop-label asp-for="ShippingChargeAmount" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="ShippingChargeAmount" asp-postfix="@Model.PrimaryStoreCurrencyCode" />
                    <span asp-validation-for="ShippingChargeAmount"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    &nbsp;
                </div>
                <div class="col-md-9">
                    <button type="button" id="addeditbutton" class="btn btn-primary"></button>
                    <button type="reset" id="resetshippingbytotalrecord" class="btn btn-default">
                        @T("Plugins.Shipping.ByTotal.Reset")
                    </button>
                    <button type="button" id="cancelbutton" class="btn btn-default">
                        @T("Admin.Common.Cancel")
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <p>
            <b>@T("Plugins.Shipping.ByTotal.SettingsTitle")</b>
        </p>

        <div class="form-group">
            <div class="col-md-3">
                <nop-label asp-for="LimitMethodsToCreated" />
            </div>
            <div class="col-md-9">
                <nop-editor asp-for="LimitMethodsToCreated" />
                <span asp-validation-for="LimitMethodsToCreated"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                &nbsp;
            </div>
            <div class="col-md-9">
                <button type="button" id="savegeneralsettings" class="btn btn-primary">
                    @T("Admin.Common.Save")
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $("#UsePercentage").click(toggleUsePercentage);
        toggleUsePercentage();

        // open add record form
        $('#btnAddRecord').click(addRecord);

        // change country id, load its states/provinces
        $("#CountryId").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#StateProvinceId")
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: { "countryId": selectedItem, "addAsterisk": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $("#getStatesByCountryIdAlert").click();
                    }
                });
        });

        // cancel Add/Edit form
        $('#cancelbutton').click(function () {
            $('#resetshippingbytotalrecord').click();
            $('#Id').val('0');
            $('#addeditbutton').text("@T("Admin.Common.AddNew")").attr('data-update', 0);
            $('#addeditpanel').hide();
        });

        // add/edit record form
        $('#addeditbutton').click(function () {
            // get whether to update or insert
            var update = $(this).attr('data-update');

            // update record
            if (update === '1') {
                var id = $('#Id').val();
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '@Url.Action("RateUpdate", "ShippingByTotal")',
                    data: addAntiForgeryToken({
                        'Id': id,
                        'StoreId': $('#StoreId').val(),
                        'WarehouseId': $('#WarehouseId').val(),
                        'CountryId': $('#CountryId').val(),
                        'StateProvinceId': $('#StateProvinceId').val(),
                        'ZipPostalCode': $('#ZipPostalCode').val(),
                        'DisplayOrder': $('#DisplayOrder').val(),
                        'ShippingMethodId': $('#ShippingMethodId').val(),
                        'From': $('#From').val(),
                        'To': $('#To').val(),
                        'UsePercentage': $('#UsePercentage').is(':checked'),
                        'ShippingChargeAmount': $('#ShippingChargeAmount').val(),
                        'ShippingChargePercentage': $('#ShippingChargePercentage').val()
                    }),
                    dataType: 'json',
                    success: function (data) {
                        $('#addeditpanel').hide();
                        $("#updateRecordOk").click();
                        updateTable('#shipping-bytotal-grid');
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $('#updateRecordFail').click();
                    }
                });
            } else {
                // add record
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '@Url.Action("AddShippingRate", "ShippingByTotal")',
                    data: $(this.form).serialize(),
                    dataType: 'json',
                    success: function (data) {
                        $("#addRecordOk").click();
                        updateTable('#shipping-bytotal-grid');
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $("#addRecordFail").click();
                    }
                });
            }
            return false;
        });

        // reset form
        $('#resetshippingbytotalrecord').click(function () {
            $('#UsePercentage').attr('checked', false);
            toggleUsePercentage();
        });

        // save settings
        $('#savegeneralsettings').click(function () {
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("SaveGeneralSettings", "ShippingByTotal")',
                data: addAntiForgeryToken({ 'LimitMethodsToCreated': $('#LimitMethodsToCreated').is(':checked')}),
                dataType: 'json',
                success: function (data) {
                    $("#savegeneralsettingsOk").click();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $("#savegeneralsettingsError").click();
                }
            });
            return false;
        });
    });

    // toggle UsePercentage/ChargeAmount controls based on checkbox
    function toggleUsePercentage() {
        if ($('#UsePercentage').is(':checked')) {
            $('#pnlAddShippingChargePercentage').show();
            $('#pnlAddShippingChargeAmount').hide();
        }
        else {
            $('#pnlAddShippingChargePercentage').hide();
            $('#pnlAddShippingChargeAmount').show();
        }
    }

    // set up form to add a shipping by total record
    function addRecord() {
        $("#addedittitle").text("@T("Plugins.Shipping.ByTotal.AddNewRecordTitle")");
        $('#resetshippingbytotalrecord').click();
        $('#Id').val('0');
        // clear the states/provinces
        $("#StateProvinceId").html('').append($('<option></option>').val(0).html('*'));;
        // update submit buttons
        $('#addeditbutton').text("@T("Admin.Common.AddNew")").attr('data-update', 0);
        $('#addeditpanel').show();
    }

    // set up form to edit a shipping by total record
    function editRecord(id) {
        $("#addedittitle").text("@T("Plugins.Shipping.ByTotal.EditRecordTitle")");
        $('#resetshippingbytotalrecord').click();
        // get and load record into form
        $('#Id').val(id);
        $.ajax({
            cache: false,
            type: 'POST',
            url: '@Url.Action("GetRate", "ShippingByTotal")',
            data: addAntiForgeryToken({ 'id': id }),
            dataType: 'json',
            success: function (data) {
                $('#StoreId').val(data.StoreId);
                $('#WarehouseId').val(data.WarehouseId);
                $('#CountryId').val(data.CountryId).change();
                // use a slight delay so the States/Provinces can be loaded
                setTimeout(function () {
                    $('#StateProvinceId').val(data.StateProvinceId);
                }, 500);

                $('#ZipPostalCode').val(data.ZipPostalCode);
                $('#DisplayOrder').val(data.DisplayOrder);
                $('#ShippingMethodId').val(data.ShippingMethodId);
                $('#From').val(data.From);
                $('#To').val(data.To);
                if (data.UsePercentage) {
                    $('#UsePercentage').prop('checked', true);
                    toggleUsePercentage();
                }
                $('#ShippingChargeAmount').val(data.ShippingChargeAmount);
                $('#ShippingChargePercentage').val(data.ShippingChargePercentage);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                $('#loadRecordFail').click();
            }
        });

        // update submit buttons
        $('#addeditbutton').text("@T("Admin.Common.Update")").attr('data-update', 1);
        $('#addeditpanel').show();
    }

    // column edit (open row in edit form)
    function renderColumnEdit(data, type, row, meta) {
        return '<button onclick=\"editRecord('+data+'); return false;\" class="btn btn-default"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</button>';
    }
    // show two decimal places for amounts
    function renderAmount(data, type, row, meta) {
        return Number(data).toFixed(2);
    }
    // add a percentage sign if value is not zero
    function renderPercentage(data, type, row, meta) {
        if (data != "0") {
            return data + '%';
        }
        return data;
    }
</script>

<nop-alert asp-alert-id="getStatesByCountryIdAlert" asp-alert-message="@T("Plugins.Shipping.ByTotal.ManageShippingSettings.StatesFailed")" />
<nop-alert asp-alert-id="savegeneralsettingsOk" asp-alert-message="@T("Admin.Common.Alert.Save.Ok")" />
<nop-alert asp-alert-id="savegeneralsettingsError" asp-alert-message="@T("Admin.Common.Alert.Save.Error")" />
<nop-alert asp-alert-id="addRecordOk" asp-alert-message="@T("Plugins.Shipping.ByTotal.RecordInsertSuccess")" />
<nop-alert asp-alert-id="addRecordFail" asp-alert-message="@T("Plugins.Shipping.ByTotal.ManageShippingSettings.AddFailed")" />
<nop-alert asp-alert-id="updateRecordOk" asp-alert-message="@T("Plugins.Shipping.ByTotal.RecordUpdateSuccess")" />
<nop-alert asp-alert-id="updateRecordFail" asp-alert-message="@T("Plugins.Shipping.ByTotal.ManageShippingSettings.UpdateFailed")" />
<nop-alert asp-alert-id="loadRecordFail" asp-alert-message="@T("Plugins.Shipping.ByTotal.RecordLoadFail")" />